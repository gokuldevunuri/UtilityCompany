--Feature 5 (Commented):  Allow a customer to end service on an address. The input includes an account ID and an end date. You need to record the end date in the account. A flat disconnection fee will be also charged to the account.  Note that you should set the account status to inactive in feature 6 (when the bill for the final month is generated). Please also insert a message to the message table stating end service request received. 



create or replace procedure endservice(var_accountID in integer, var_enddate in date) IS
flat_rate float; -- This variable will hold flat fee for disconnecting the service on a specific month of the given date var_enddate
accid integer;-- This variable will hold the value of the account retrieved from the account table

/* First we will retrieve the rate for the given date (var_enddate).Then based on the values saved in the variable flat_rate, 
we will see if there are one or many rates for this month. If there are many rates an exception 
will be thrown and a message will be displayed to the user that the given month has many rates in the Database.
Then, we will check if the account provided exists in the account table and if its status is 'active'. 
If the account(var_accountID ) doesn't exist then an exception will occur and a message will be displayed stating that 
the account provided is wrong or the service has already ended for the account provided. If the program continues without exception, 
then we will update the account table given account(var_accountID) and end its service .
A message will be inserted to the message table indicating that a request to end the service has been received for the give account number(var_accountID) 
and a disconnection fee will be added to the balance of the account.
*/
begin
select flatfee into flat_rate from rate where Extract(month from chargeDate) = Extract(month from var_enddate);
select accountID into accid from account where accountID=var_accountID and status='active' and ENDOFSERVICE is null;
update account set endOfService=var_enddate, balance=balance+flat_rate where accountID=var_accountID and status='active';
insert into message values(msg_sequence.nextval, var_accountID, 'Your request to end service on [ ' || var_enddate || ' ] was received for your account number ' || var_accountID || '. A disconnection fee of ' || flat_rate || ' was added to your balance', sysdate);
dbms_output.put_line('We have received you request to end the service');

exception
when no_data_found then
dbms_output.put_line('The account number you entered is either worng or the serivce has already been ended');
when too_many_rows then
dbms_output.put_line('Too many rates for the same period');
end;
/
-- case 1: ending the service on an active account
exec endservice (5,date '2016-12-03');
-- case 2: requesting to end service on a service that has already been ended
exec endservice (1,date '2016-12-03');


/
